{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { GET_CURRENT_USER } from \"./actions\";\nconst StoreContext = createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_CURRENT_USER:\n      return { ...state,\n        currentUser: action.user,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    users: [],\n    currentUser: {\n      username: \"\",\n      password: \"\"\n    },\n    loading: false\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","GET_CURRENT_USER","StoreContext","Provider","reducer","state","action","type","currentUser","user","loading","StoreProvider","value","props","dispatch","users","username","password","useStoreContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAAQC,gBAAR,QAA+B,WAA/B;AAEA,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,WAAW,EAAEF,MAAM,CAACG,IAFjB;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAChD,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBf,UAAU,CAACK,OAAD,EAAU;AAC1CW,IAAAA,KAAK,EAAE,EADmC;AAE1CP,IAAAA,WAAW,EAAE;AACTQ,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAF6B;AAM1CP,IAAAA,OAAO,EAAE;AANiC,GAAV,CAApC;AASA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACL,KAAD,EAAQS,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAXD;;AAaA,MAAMK,eAAe,GAAG,MAAM;AAC1B,SAAOlB,UAAU,CAACE,YAAD,CAAjB;AACH,CAFD;;AAIA,SAASS,aAAT,EAAwBO,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {GET_CURRENT_USER} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case GET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: action.user,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        users: [],\n        currentUser: {\n            username: \"\",\n            password: \"\"\n        },\n        loading: false\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };"]},"metadata":{},"sourceType":"module"}