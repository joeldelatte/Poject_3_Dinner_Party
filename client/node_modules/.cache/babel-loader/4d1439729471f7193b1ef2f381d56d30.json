{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\nexport default function Feeds(props) {\n  const {\n    globalUserId,\n    setGlobalUserId\n  } = useContext(UserIdContext);\n  const [seats, setSeats] = useState(\"\");\n\n  function callbackFunction(childData) {\n    setSeats(parseInt(childData));\n  }\n\n  function click(event) {\n    API.postRsvp({\n      UserId: globalUserId,\n      EventId: event.id,\n      rsvp_seats: seats\n    }).then(res => console.log(res.data));\n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"globalUserId\");\n\n    if (data) {\n      setGlobalUserId(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n  });\n  return props.events.map(event => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      click: () => click(event),\n      parentCallback: callbackFunction,\n      state: seats,\n      name: event.event_name,\n      address: event.event_address,\n      city: event.event_city,\n      eventState: event.event_state,\n      zip: event.event_zip,\n      app: event.app,\n      appdes: event.app_description,\n      entree: event.entree,\n      entreedes: event.entree_description,\n      dessert: event.dessert,\n      dessertdes: event.dessert_description,\n      key: event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  });\n}\n;","map":{"version":3,"sources":["/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js"],"names":["React","useContext","useEffect","useState","Feed","API","UserIdContext","Feeds","props","globalUserId","setGlobalUserId","seats","setSeats","callbackFunction","childData","parseInt","click","event","postRsvp","UserId","EventId","id","rsvp_seats","then","res","console","log","data","localStorage","getItem","JSON","parse","setItem","stringify","events","map","event_name","event_address","event_city","event_state","event_zip","app","app_description","entree","entree_description","dessert","dessert_description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCT,UAAU,CAACK,aAAD,CAApD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASU,gBAAT,CAA0BC,SAA1B,EAAqC;AACjCF,IAAAA,QAAQ,CAACG,QAAQ,CAACD,SAAD,CAAT,CAAR;AACH;;AAED,WAASE,KAAT,CAAeC,KAAf,EAAsB;AAElBZ,IAAAA,GAAG,CAACa,QAAJ,CAAa;AACTC,MAAAA,MAAM,EAAEV,YADC;AAETW,MAAAA,OAAO,EAAEH,KAAK,CAACI,EAFN;AAGTC,MAAAA,UAAU,EAAEX;AAHH,KAAb,EAKKY,IALL,CAKUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CALjB;AAMH;;AAEDzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACNjB,MAAAA,eAAe,CAACoB,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAf;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOAzB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,SAAL,CAAexB,YAAf,CAArC;AACH,GAFQ,CAAT;AAIA,SAAOD,KAAK,CAAC0B,MAAN,CAAaC,GAAb,CAAkBlB,KAAD,IAAW;AAC/B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE,MAAMD,KAAK,CAACC,KAAD,CADtB;AAEI,MAAA,cAAc,EAAEJ,gBAFpB;AAGI,MAAA,KAAK,EAAEF,KAHX;AAII,MAAA,IAAI,EAAEM,KAAK,CAACmB,UAJhB;AAKI,MAAA,OAAO,EAAEnB,KAAK,CAACoB,aALnB;AAMI,MAAA,IAAI,EAAEpB,KAAK,CAACqB,UANhB;AAOI,MAAA,UAAU,EAAErB,KAAK,CAACsB,WAPtB;AAQI,MAAA,GAAG,EAAEtB,KAAK,CAACuB,SARf;AASI,MAAA,GAAG,EAAEvB,KAAK,CAACwB,GATf;AAUI,MAAA,MAAM,EAAExB,KAAK,CAACyB,eAVlB;AAWI,MAAA,MAAM,EAAEzB,KAAK,CAAC0B,MAXlB;AAYI,MAAA,SAAS,EAAE1B,KAAK,CAAC2B,kBAZrB;AAaI,MAAA,OAAO,EAAE3B,KAAK,CAAC4B,OAbnB;AAcI,MAAA,UAAU,EAAE5B,KAAK,CAAC6B,mBAdtB;AAeI,MAAA,GAAG,EAAE7B,KAAK,CAACI,EAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAoBH,GArBM,CAAP;AAsBH;AAAA","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\n\n\n\nexport default function Feeds(props) {\n\n    const { globalUserId, setGlobalUserId } = useContext(UserIdContext);\n    const [seats, setSeats] = useState(\"\");\n\n    function callbackFunction(childData) {\n        setSeats(parseInt(childData))\n    }\n\n    function click(event) {\n\n        API.postRsvp({\n            UserId: globalUserId,\n            EventId: event.id,\n            rsvp_seats: seats\n        })\n            .then(res => console.log(res.data));\n    }\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"globalUserId\");\n        if (data) {\n            setGlobalUserId(JSON.parse(data));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n    });\n\n    return props.events.map((event) => {\n        return (\n            <div>\n                <Feed\n                    click={() => click(event)}\n                    parentCallback={callbackFunction}\n                    state={seats}\n                    name={event.event_name}\n                    address={event.event_address}\n                    city={event.event_city}\n                    eventState={event.event_state}\n                    zip={event.event_zip}\n                    app={event.app}\n                    appdes={event.app_description}\n                    entree={event.entree}\n                    entreedes={event.entree_description}\n                    dessert={event.dessert}\n                    dessertdes={event.dessert_description}\n                    key={event.id}\n                />\n            </div>)\n    });\n};"]},"metadata":{},"sourceType":"module"}