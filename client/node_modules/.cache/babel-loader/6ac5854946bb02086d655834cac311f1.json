{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/SignUp/SignUp.js\";\nimport React, { useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport { UserContext } from \"../../utils/UserContext\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\nexport default function SignUp() {\n  // functionality here\n  const {\n    globalUserName,\n    setGlobalUserName\n  } = useContext(UserContext);\n  const {\n    globalUserId,\n    setGlobalUserId\n  } = useContext(UserIdContext);\n  const [passWord, setPassWord] = useState(\"\");\n  const [next, setNext] = useState(false);\n\n  function validateForm() {\n    if (globalUserName.length > 6 && passWord.length > 6 && next === false) {\n      return true;\n    }\n\n    ;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  ;\n\n  function createGlobalUserData(res) {\n    setGlobalUserId(res.data.id);\n    setGlobalUserName(res.data.username);\n    setNext(true);\n  }\n\n  function createUser() {\n    API.postUser({\n      username: globalUserName,\n      password: passWord\n    }).then(res => {\n      createGlobalUserData(res);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card border-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Create Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card-body text-dark\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Username (6 or more characters)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"off\",\n    className: \"form-control form-row\",\n    placeholder: \"\",\n    onChange: e => setGlobalUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Password (6 or more characters)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    autoComplete: \"off\",\n    className: \"form-control form-row\",\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control form-row\",\n    placeholder: \"\",\n    onChange: e => setPassWord(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, !next && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !validateForm(),\n    className: \"btn btn-primary\",\n    onClick: () => createUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }\n  }, \"Sign Up\"), next && /*#__PURE__*/React.createElement(Link, {\n    to: \"/events\",\n    role: \"button\",\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Enter Dinner Party\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/SignUp/SignUp.js"],"names":["React","useState","useContext","BrowserRouter","Router","Route","Switch","Link","API","UserContext","UserIdContext","SignUp","globalUserName","setGlobalUserName","globalUserId","setGlobalUserId","passWord","setPassWord","next","setNext","validateForm","length","handleSubmit","event","preventDefault","createGlobalUserData","res","data","id","username","createUser","postUser","password","then","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,IAAhD,QAA2D,kBAA3D;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,eAAe,SAASC,MAAT,GAAkB;AACjC;AACE,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAsCX,UAAU,CAACO,WAAD,CAAtD;AACA,QAAM;AAACK,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAkCb,UAAU,CAACQ,aAAD,CAAlD;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;;AAEE,WAASmB,YAAT,GAAwB;AACtB,QAAIR,cAAc,CAACS,MAAf,GAAwB,CAAxB,IACAL,QAAQ,CAACK,MAAT,GAAkB,CADlB,IAEAH,IAAI,KAAK,KAFb,EAGI;AAAC,aAAO,IAAP;AAAY;;AAAA;AAClB;;AAED,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACD;;AAAA;;AAED,WAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACjCX,IAAAA,eAAe,CAACW,GAAG,CAACC,IAAJ,CAASC,EAAV,CAAf;AACAf,IAAAA,iBAAiB,CAACa,GAAG,CAACC,IAAJ,CAASE,QAAV,CAAjB;AACAV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,WAASW,UAAT,GAAsB;AAEpBtB,IAAAA,GAAG,CAACuB,QAAJ,CAAa;AACXF,MAAAA,QAAQ,EAAEjB,cADC;AAEXoB,MAAAA,QAAQ,EAAEhB;AAFC,KAAb,EAICiB,IAJD,CAIMP,GAAG,IAAI;AACXD,MAAAA,oBAAoB,CAACC,GAAD,CAApB;AACD,KAND;AAOD;;AAAA;AAED,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAsC,IAAA,QAAQ,EAAGJ,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,YAAY,EAAC,KAAhC;AAAsC,IAAA,SAAS,EAAC,uBAAhD;AAAwE,IAAA,WAAW,EAAC,EAApF;AAAuF,IAAA,QAAQ,EAAEY,CAAC,IAAIrB,iBAAiB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,YAAY,EAAC,KAApC;AAA0C,IAAA,SAAS,EAAC,uBAApD;AAA4E,IAAA,WAAW,EAAC,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAwB,IAAA,SAAS,EAAC,uBAAlC;AAA0D,IAAA,WAAW,EAAC,EAAtE;AAAyE,IAAA,QAAQ,EAAEF,CAAC,IAAIjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAaE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAAClB,IAAD,iBAAS;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACE,YAAY,EAA7C;AAAiD,IAAA,SAAS,EAAC,iBAA3D;AAA6E,IAAA,OAAO,EAAG,MAAMU,UAAU,EAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADb,EAEIZ,IAAI,iBAAI,oBAAC,IAAD;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,SAAS,EAAC,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFZ,CAbF,CAFF,CADF,CAFF,eAyBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF,CADF;AAgCH","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {BrowserRouter as Router, Route, Switch, Link} from \"react-router-dom\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport {UserContext} from \"../../utils/UserContext\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\n\n\nexport default function SignUp() {\n// functionality here\n  const {globalUserName, setGlobalUserName} = useContext(UserContext);\n  const {globalUserId, setGlobalUserId} = useContext(UserIdContext);\n\n  const [passWord, setPassWord] = useState(\"\");\n  const [next, setNext] = useState(false)\n\n    function validateForm() {\n      if (globalUserName.length > 6 &&\n          passWord.length > 6 &&\n          next === false)\n          {return true};\n    } \n\n    function handleSubmit(event) {\n      event.preventDefault();\n    };\n\n    function createGlobalUserData(res) {\n      setGlobalUserId(res.data.id);\n      setGlobalUserName(res.data.username);\n      setNext(true)\n    }\n\n    function createUser() {\n\n      API.postUser({\n        username: globalUserName,\n        password: passWord\n      })\n      .then(res => {\n        createGlobalUserData(res);\n      });\n    };\n\n    return (\n      <>\n        <div className=\"container middle\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4\">\n            <div className=\"card border-dark\">\n              <div className=\"card-header text-center\">Create Account</div>\n              <form className=\"card-body text-dark\" onSubmit={ handleSubmit } >\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\" className=\"form-row\">Username (6 or more characters)</label>\n                  <input type=\"text\" autoComplete=\"off\" className=\"form-control form-row\" placeholder=\"\" onChange={e => setGlobalUserName(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"form-row\">Password (6 or more characters)</label>\n                  <input type=\"password\" autoComplete=\"off\" className=\"form-control form-row\" placeholder=\"\" />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\" className=\"form-row\">Confirm Password</label>\n                  <input type=\"password\"  className=\"form-control form-row\" placeholder=\"\" onChange={e => setPassWord(e.target.value)}/>\n                </div>\n                <div className=\"form-row justify-content-center\" >\n                  {(!next && <button type=\"submit\" disabled={!validateForm()} className=\"btn btn-primary\" onClick={ () => createUser() } >Sign Up</button>)}\n                  {(next && <Link  to=\"/events\" role=\"button\" type=\"submit\" className=\"btn btn-success\"  >Enter Dinner Party</Link>)} \n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"col-md-4\"></div>\n        </div>\n      </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}