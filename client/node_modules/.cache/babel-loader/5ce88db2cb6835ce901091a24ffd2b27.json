{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js\";\nimport React, { useContext } from 'react';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\nexport default function Feeds(props) {\n  const {\n    globalUserId,\n    setGlobalUserId\n  } = useContext(UserIdContext);\n\n  function click(event) {\n    API.postRsvp({\n      UserId: globalUserId,\n      EventId: event.id // event_seats: eventSeats\n\n    }).then(res => console.log(res.data));\n    console.log(globalUserId);\n    console.log(event.id);\n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"globalUserId\");\n\n    if (data) {\n      setGlobalUserId(JSON.parse(data));\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n  });\n  return props.events.map(event => {\n    return /*#__PURE__*/React.createElement(Feed, {\n      click: () => click(event),\n      name: event.event_name,\n      app: event.app,\n      appdes: event.app_description,\n      entree: event.entree,\n      entreedes: event.entree_description,\n      dessert: event.dessert,\n      dessertdes: event.dessert_description,\n      key: event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  });\n}\n;","map":{"version":3,"sources":["/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js"],"names":["React","useContext","Feed","API","UserIdContext","Feeds","props","globalUserId","setGlobalUserId","click","event","postRsvp","UserId","EventId","id","then","res","console","log","data","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","events","map","event_name","app","app_description","entree","entree_description","dessert","dessert_description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCP,UAAU,CAACG,aAAD,CAApD;;AAEA,WAASK,KAAT,CAAeC,KAAf,EAAsB;AAElBP,IAAAA,GAAG,CAACQ,QAAJ,CAAa;AACTC,MAAAA,MAAM,EAAEL,YADC;AAETM,MAAAA,OAAO,EAAEH,KAAK,CAACI,EAFN,CAGT;;AAHS,KAAb,EAKKC,IALL,CAKUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CALjB;AAOAF,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACI,EAAlB;AACH;;AAEDM,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMD,IAAI,GAAGE,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIH,IAAJ,EAAU;AACNX,MAAAA,eAAe,CAACe,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAD,CAAf;AACH;AACJ,GALQ,CAAT;AAOAC,EAAAA,SAAS,CAAC,MAAK;AACXC,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,SAAL,CAAenB,YAAf,CAArC;AACH,GAFQ,CAAT;AAKA,SAAOD,KAAK,CAACqB,MAAN,CAAaC,GAAb,CAAkBlB,KAAD,IAAW;AAC/B,wBAAO,oBAAC,IAAD;AACH,MAAA,KAAK,EAAE,MAAMD,KAAK,CAACC,KAAD,CADf;AAEH,MAAA,IAAI,EAAEA,KAAK,CAACmB,UAFT;AAGH,MAAA,GAAG,EAAEnB,KAAK,CAACoB,GAHR;AAIH,MAAA,MAAM,EAAEpB,KAAK,CAACqB,eAJX;AAKH,MAAA,MAAM,EAAErB,KAAK,CAACsB,MALX;AAMH,MAAA,SAAS,EAAEtB,KAAK,CAACuB,kBANd;AAOH,MAAA,OAAO,EAAEvB,KAAK,CAACwB,OAPZ;AAQH,MAAA,UAAU,EAAExB,KAAK,CAACyB,mBARf;AASH,MAAA,GAAG,EAAEzB,KAAK,CAACI,EATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAWH,GAZM,CAAP;AAaH;AAAA","sourcesContent":["import React, { useContext } from 'react';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\n\n\nexport default function Feeds(props) {\n\n    const { globalUserId, setGlobalUserId } = useContext(UserIdContext);\n\n    function click(event) {\n\n        API.postRsvp({\n            UserId: globalUserId,\n            EventId: event.id,\n            // event_seats: eventSeats\n        })\n            .then(res => console.log(res.data));\n\n        console.log(globalUserId);\n        console.log(event.id);\n    }\n\n    useEffect(()=> {\n        const data = localStorage.getItem(\"globalUserId\");\n        if (data) {\n            setGlobalUserId(JSON.parse(data));\n        }\n    });\n\n    useEffect(()=> {\n        localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n    });\n\n\n    return props.events.map((event) => {\n        return <Feed\n            click={() => click(event)}\n            name={event.event_name}\n            app={event.app}\n            appdes={event.app_description}\n            entree={event.entree}\n            entreedes={event.entree_description}\n            dessert={event.dessert}\n            dessertdes={event.dessert_description}\n            key={event.id}\n        />\n    });\n};"]},"metadata":{},"sourceType":"module"}