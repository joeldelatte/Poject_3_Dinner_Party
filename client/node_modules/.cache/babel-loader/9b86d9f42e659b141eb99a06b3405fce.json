{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Moment from 'react-moment';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\nexport default function Feeds(props) {\n  const {\n    globalUserId,\n    setGlobalUserId\n  } = useContext(UserIdContext);\n  const [seats, setSeats] = useState(\"\");\n\n  function callbackFunction(childData) {\n    setSeats(parseInt(childData));\n  }\n\n  function click(event) {\n    API.postRsvp({\n      UserId: globalUserId,\n      EventId: event.id,\n      rsvp_seats: seats\n    }).then(res => console.log(res.data));\n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"globalUserId\");\n\n    if (data) {\n      setGlobalUserId(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n  });\n  return props.events.map(event => {\n    return /*#__PURE__*/React.createElement(Feed, {\n      click: () => click(event),\n      parentCallback: callbackFunction,\n      state: seats,\n      name: event.event_name,\n      date: event.event_date,\n      app: event.app,\n      appdes: event.app_description,\n      entree: event.entree,\n      entreedes: event.entree_description,\n      dessert: event.dessert,\n      dessertdes: event.dessert_description,\n      key: event.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    });\n  });\n}\n;","map":{"version":3,"sources":["/Users/joeldelatte/bootcamp/Project_3_Dinner_Party/client/src/components/Feeds/Feeds.js"],"names":["React","useContext","useEffect","useState","Moment","Feed","API","UserIdContext","Feeds","props","globalUserId","setGlobalUserId","seats","setSeats","callbackFunction","childData","parseInt","click","event","postRsvp","UserId","EventId","id","rsvp_seats","then","res","console","log","data","localStorage","getItem","JSON","parse","setItem","stringify","events","map","event_name","event_date","app","app_description","entree","entree_description","dessert","dessert_description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCV,UAAU,CAACM,aAAD,CAApD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASW,gBAAT,CAA0BC,SAA1B,EAAqC;AACjCF,IAAAA,QAAQ,CAACG,QAAQ,CAACD,SAAD,CAAT,CAAR;AACH;;AAED,WAASE,KAAT,CAAeC,KAAf,EAAsB;AAElBZ,IAAAA,GAAG,CAACa,QAAJ,CAAa;AACTC,MAAAA,MAAM,EAAEV,YADC;AAETW,MAAAA,OAAO,EAAEH,KAAK,CAACI,EAFN;AAGTC,MAAAA,UAAU,EAAEX;AAHH,KAAb,EAKKY,IALL,CAKUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CALjB;AAMH;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACNjB,MAAAA,eAAe,CAACoB,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAf;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOA1B,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,SAAL,CAAexB,YAAf,CAArC;AACH,GAFQ,CAAT;AAIA,SAAOD,KAAK,CAAC0B,MAAN,CAAaC,GAAb,CAAkBlB,KAAD,IAAW;AAC/B,wBAAO,oBAAC,IAAD;AACH,MAAA,KAAK,EAAE,MAAMD,KAAK,CAACC,KAAD,CADf;AAEH,MAAA,cAAc,EAAEJ,gBAFb;AAGH,MAAA,KAAK,EAAEF,KAHJ;AAIH,MAAA,IAAI,EAAEM,KAAK,CAACmB,UAJT;AAKH,MAAA,IAAI,EAAEnB,KAAK,CAACoB,UALT;AAMH,MAAA,GAAG,EAAEpB,KAAK,CAACqB,GANR;AAOH,MAAA,MAAM,EAAErB,KAAK,CAACsB,eAPX;AAQH,MAAA,MAAM,EAAEtB,KAAK,CAACuB,MARX;AASH,MAAA,SAAS,EAAEvB,KAAK,CAACwB,kBATd;AAUH,MAAA,OAAO,EAAExB,KAAK,CAACyB,OAVZ;AAWH,MAAA,UAAU,EAAEzB,KAAK,CAAC0B,mBAXf;AAYH,MAAA,GAAG,EAAE1B,KAAK,CAACI,EAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAcH,GAfM,CAAP;AAgBH;AAAA","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Moment from 'react-moment';\nimport Feed from './Feed/Feed';\nimport API from \"../../utils/API\";\nimport { UserIdContext } from \"../../utils/UserIdContext\";\n\n\nexport default function Feeds(props) {\n\n    const { globalUserId, setGlobalUserId } = useContext(UserIdContext);\n    const [seats, setSeats] = useState(\"\");\n\n    function callbackFunction(childData) {\n        setSeats(parseInt(childData))\n    }\n\n    function click(event) {\n\n        API.postRsvp({\n            UserId: globalUserId,\n            EventId: event.id,\n            rsvp_seats: seats\n        })\n            .then(res => console.log(res.data));\n    }\n\n    useEffect(() => {\n        const data = localStorage.getItem(\"globalUserId\");\n        if (data) {\n            setGlobalUserId(JSON.parse(data));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"globalUserId\", JSON.stringify(globalUserId));\n    });\n\n    return props.events.map((event) => {\n        return <Feed\n            click={() => click(event)}\n            parentCallback={callbackFunction}\n            state={seats}\n            name={event.event_name}\n            date={event.event_date}\n            app={event.app}\n            appdes={event.app_description}\n            entree={event.entree}\n            entreedes={event.entree_description}\n            dessert={event.dessert}\n            dessertdes={event.dessert_description}\n            key={event.id}\n        />\n    });\n};"]},"metadata":{},"sourceType":"module"}